/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//import static User.startConnection;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import static java.lang.System.out;
import java.net.Socket;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import java.util.HashMap;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Eric Cao
 * @author Kierstin Matsuda
 * @author Kevin Garcia
 */
public class finalProjectUI extends javax.swing.JFrame {

    /**
     * Creates new form finalProjectUI
     */
    // the IP address of the gateway server
    // private static final String GATEWAY_IP = "192.168.1.242";
    // private static final String GATEWAY_IP = "192.168.1.242"; // Kierstins at
    // Kevins
    // private static final String GATEWAY_IP = "192.168.1.239"; // Eric at Kevin
    // private static final String GATEWAY_IP = "192.168.1.107";//k at k's
    // private static final String GATEWAY_IP = "192.168.1.125"; //Kierstins at
    // Kierstins
    // private static final String GATEWAY_IP = "10.108.109.5"; // Kevins at FIU
    private static final String GATEWAY_IP = "10.108.105.186";
    // socket constructor takes port as int
    private static final int PORT = 8080;
    private static Socket clientSocket;
    private static Boolean receivingInput = false;
    // Streams for communicating with the gateway server
    private static PrintWriter out;
    private static BufferedReader in;
    // the amount that this slave node's time is offset from the master nodes time
    // in seconds
    private static int timeOffset = 0;
    // global keybaord scanner which is closed in main
    private static final Scanner keyboard = new Scanner(System.in);

    private static String newDeviceName = "";
    private static String deviceTrueValue = "";
    private static String deviceFalseValue = "";
    private static HashMap<String, Integer> deviceIds = new HashMap<String, Integer>();
    private static HashMap<Integer, String> deviceNames = new HashMap<Integer, String>();
    private static HashMap<Integer, Boolean> sensorValues = new HashMap<Integer, Boolean>();
    private static HashMap<Integer, String> trueValues = new HashMap<Integer, String>();
    private static HashMap<Integer, String> falseValues = new HashMap<Integer, String>();

    public finalProjectUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        menu = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        dropdown = new javax.swing.JComboBox<>();
        option = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultBox = new javax.swing.JTextArea();
        run = new javax.swing.JButton();
        database = new javax.swing.JPanel();
        enterDate = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dbBox = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        remove = new javax.swing.JPanel();
        removeButton = new javax.swing.JButton();
        removeBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        add = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        addObject = new javax.swing.JButton();
        newName = new javax.swing.JTextField();
        deviceButton = new javax.swing.JRadioButton();
        sensorButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        alertBox = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Smart Home Management System",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setToolTipText("");

        title.setText("Select an Option:");

        dropdown.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[] { "Security", "Beacon", "Door", "Motion", "Outlet", "SmartBulb", "Temperature" }));
        dropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownActionPerformed(evt);
            }
        });

        option.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Set Home", "Set Away" }));
        option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionActionPerformed(evt);
            }
        });

        resultBox.setColumns(20);
        resultBox.setRows(5);
        jScrollPane1.setViewportView(resultBox);

        run.setText("Run");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuLayout.createSequentialGroup().addGap(48, 48, 48)
                        .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(menuLayout.createSequentialGroup().addGap(151, 151, 151)
                                        .addComponent(option, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18).addComponent(run))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE))
                        .addGap(35, 35, 35))
                .addGroup(menuLayout.createSequentialGroup()
                        .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(menuLayout.createSequentialGroup().addGap(46, 46, 46).addComponent(dropdown,
                                        javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(menuLayout.createSequentialGroup().addGap(55, 55, 55).addComponent(title)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        menuLayout.setVerticalGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuLayout.createSequentialGroup().addGap(17, 17, 17).addComponent(title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dropdown, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(run))
                        .addGap(18, 18, 18).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Menu", menu);

        enterDate.setForeground(new java.awt.Color(102, 102, 102));
        enterDate.setText("Enter in format MM/DD/YYYY HH:MM:SS");

        input.setToolTipText("Enter as MM/DD/YYYY HH:MM:SS");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dbBox.setColumns(20);
        dbBox.setRows(5);
        jScrollPane2.setViewportView(dbBox);

        jLabel3.setText("Enter a date and time to see the associated log entries");

        javax.swing.GroupLayout databaseLayout = new javax.swing.GroupLayout(database);
        database.setLayout(databaseLayout);
        databaseLayout.setHorizontalGroup(databaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(databaseLayout.createSequentialGroup().addGap(113, 113, 113)
                        .addGroup(databaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 215,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, databaseLayout.createSequentialGroup()
                        .addContainerGap(95, Short.MAX_VALUE)
                        .addGroup(databaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                        databaseLayout.createSequentialGroup().addComponent(jButton1).addGap(116, 116,
                                                116))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                        databaseLayout.createSequentialGroup().addComponent(jLabel3).addGap(85, 85, 85))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, databaseLayout
                                        .createSequentialGroup().addComponent(enterDate).addGap(125, 125, 125)))));
        databaseLayout.setVerticalGroup(databaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(databaseLayout.createSequentialGroup().addGap(17, 17, 17).addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 16,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(databaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1).addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(41, Short.MAX_VALUE)));

        input.getAccessibleContext().setAccessibleName("");

        jTabbedPane1.addTab("Database", database);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        removeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Select the device you would  like to remove:");

        javax.swing.GroupLayout removeLayout = new javax.swing.GroupLayout(remove);
        remove.setLayout(removeLayout);
        removeLayout.setHorizontalGroup(removeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(removeLayout.createSequentialGroup()
                        .addGroup(removeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(removeLayout.createSequentialGroup().addGap(127, 127, 127)
                                        .addComponent(removeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 154,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removeButton))
                                .addGroup(removeLayout.createSequentialGroup().addGap(116, 116, 116).addComponent(
                                        jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 284,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(121, Short.MAX_VALUE)));
        removeLayout.setVerticalGroup(removeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(removeLayout.createSequentialGroup().addGap(69, 69, 69).addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(removeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(removeBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(removeButton))
                        .addContainerGap(142, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Remove", remove);

        name.setText("Name:");

        type.setText("Type:");

        addObject.setText("Add");
        addObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addObjectActionPerformed(evt);
            }
        });

        newName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNameActionPerformed(evt);
            }
        });

        buttonGroup1.add(deviceButton);
        deviceButton.setSelected(true);
        deviceButton.setText("Device");

        buttonGroup1.add(sensorButton);
        sensorButton.setText("Sensor");

        jLabel1.setText("True Value:");

        jLabel2.setText("False Value:");

        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addLayout = new javax.swing.GroupLayout(add);
        add.setLayout(addLayout);
        addLayout.setHorizontalGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addLayout.createSequentialGroup().addGap(130, 130, 130).addGroup(addLayout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addLayout.createSequentialGroup().addComponent(type).addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(addLayout.createSequentialGroup()
                                .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1).addComponent(name).addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32,
                                        Short.MAX_VALUE)
                                .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addLayout.createSequentialGroup().addComponent(deviceButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sensorButton))
                                        .addGroup(addLayout.createSequentialGroup().addGap(6, 6, 6).addGroup(addLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 144,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 144,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(newName, javax.swing.GroupLayout.PREFERRED_SIZE, 144,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(addObject, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 145,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(131, 131, 131)))));
        addLayout.setVerticalGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addLayout.createSequentialGroup().addGap(22, 22, 22)
                        .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(newName, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(type).addComponent(deviceButton).addComponent(sensorButton))
                        .addGap(18, 18, 18).addComponent(addObject).addContainerGap(43, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Add", add);

        alertBox.setEditable(false);
        alertBox.setColumns(20);
        alertBox.setRows(5);
        jScrollPane4.setViewportView(alertBox);

        jLabel5.setText("System Alerts:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                        jPanel1Layout.createSequentialGroup().addContainerGap(52, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 421,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))
                .addGroup(jPanel1Layout.createSequentialGroup().addGap(64, 64, 64).addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                        jPanel1Layout.createSequentialGroup().addContainerGap(20, Short.MAX_VALUE).addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 197,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)));

        jTabbedPane1.addTab("Alerts", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_newNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_newNameActionPerformed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_inputActionPerformed

    }// GEN-LAST:event_inputActionPerformed

    private void dropdownActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_dropdownActionPerformed
        // TODO add your handling code here:

        option.removeAllItems();
        if (dropdown.getSelectedIndex() != 0) {
            option.addItem("Query");
            if (!sensorValues.get(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())))) {
                option.addItem(
                        "Set to " + trueValues.get(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex()))));
                option.addItem(
                        "Set to " + falseValues.get(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex()))));
            }
        } else {
            option.addItem("Set Home");
            option.addItem("Set Away");
        }

    }// GEN-LAST:event_dropdownActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_removeButtonActionPerformed

        dropdown.removeItemAt(removeBox.getSelectedIndex() + 1);
        removeBox.removeItemAt(removeBox.getSelectedIndex());

        // send to gateway server to cancel those
    }// GEN-LAST:event_removeButtonActionPerformed

    private void addObjectActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addObjectActionPerformed
        // the "add button"
        receivingInput = true;
        System.out.println("add was clicked.");
        newDeviceName = (String) newName.getText();
        deviceTrueValue = (String) jTextField1.getText();
        deviceFalseValue = (String) jTextField2.getText();
        dropdown.addItem(newDeviceName);
        Boolean sensor;
        newName.setText("");
        jTextField1.setText("");
        jTextField2.setText("");
        System.out.println("set everything to empty");

        out.println("new");
        System.out.println("sent new");

        if (sensorButton.isSelected()) {
            out.println("sensor");
            System.out.println("sent sensor");
            // default title and icon
            javax.swing.JOptionPane.showMessageDialog(null, "Your sensor has been added.");
            sensor = true;
        } else {
            out.println("device");
            System.out.println("sent device");
            // default title and icon
            javax.swing.JOptionPane.showMessageDialog(null, "Your device has been added.");
            sensor = false;
        }
        out.println(newDeviceName);
        out.println(deviceTrueValue);
        out.println(deviceFalseValue);
        System.out.println("sent true/false");
        String input = "";

        try {
            System.out.println("BEFORE");
            input = in.readLine();
            System.out.println("AFTER");
        } catch (IOException ex) {
            Logger.getLogger(finalProjectUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        int myID = Integer.parseInt(input);
        deviceNames.put(myID, newDeviceName);
        deviceIds.put(newDeviceName, myID);
        trueValues.put(myID, deviceTrueValue);
        falseValues.put(myID, deviceFalseValue);
        sensorValues.put(myID, sensor);
        receivingInput = false;
    }// GEN-LAST:event_addObjectActionPerformed

    private void removeBoxActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_removeBoxActionPerformed
        // remove dropdown box

    }// GEN-LAST:event_removeBoxActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextField2ActionPerformed

    private void optionActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_optionActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_optionActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_runActionPerformed
        String option1, option2, result, temp;
        option1 = (String) dropdown.getSelectedItem();
        option2 = (String) option.getSelectedItem();
        result = option1 + " " + option2;
        temp = "";
        if (dropdown.getSelectedIndex() != 0) {
            if (option2.equals("Query")) {
                if (!(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())) < 0)) {
                    out.println(" ~" + deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())));
                } else {
                    if (option1.equals("SmartBulb")) {
                        out.println("bulb");
                    } else {
                        out.println(option1);
                    }
                }
                try {
                    System.out.println("KEVIN");
                    result = in.readLine();
                } catch (IOException ex) {
                    Logger.getLogger(finalProjectUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (option.getSelectedIndex() == 1) {
                if (!(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())) < 0)) {
                    out.println(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())) + ",true");
                    result = "true";
                } else {
                    if (option1.equals("SmartBulb")) {
                        out.println("bulb,true");
                    } else {
                        out.println(option1.toLowerCase() + ",true");
                    }
                    result = "true";
                }
            } else if (option.getSelectedIndex() == 2) {
                if (!(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())) < 0)) {
                    out.println(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex())) + ",false");
                    result = "false";
                } else {
                    if (option1.equals("SmartBulb")) {
                        out.println("bulb,false");
                    } else {
                        out.println(option1.toLowerCase() + ",false");
                    }
                    result = "false";
                }
            }
            System.out.println(result);
            for (int i = 0; i < 2; i++) {
                if (result.equals("true")) {
                    resultBox.setText(trueValues.get(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex()))));
                    i++;
                } else if (result.equals("false")) {
                    resultBox.setText(falseValues.get(deviceIds.get(dropdown.getItemAt(dropdown.getSelectedIndex()))));
                    i++;
                } else {
                    if (result.contains(".")) {
                        resultBox.setText("The temperature is " + result + "º Celsius");
                        i++;
                    } else {
                        alertBox.append(result);
                        try {
                            System.out.println("KIERSTIN");
                            result = in.readLine();
                        } catch (IOException ex) {
                            Logger.getLogger(finalProjectUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        } else {
            if (option.getSelectedIndex() == 0) {
                out.println("HOME");
                resultBox.setText("Alarm set to Home");
            } else {
                out.println("AWAY");
                resultBox.setText("Alarm set to Away");
            }
        }
    }// GEN-LAST:event_runActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed

        String date;
        dbBox.setText("");
        date = (String) input.getText();
        out.println("DATABASE, " + date);
        while (true) {
            System.out.println("while true");
            try {
                System.out.println("NOT");
                String input = in.readLine();
                if (input.equals("u")) {
                    System.out.println("MAYBE HERE");
                    input = in.readLine();
                    dbBox.append(input);
                    dbBox.append("\n");
                } else if (input.equals("-1")) {
                    break;
                }
            } catch (IOException ex) {
                Logger.getLogger(finalProjectUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }// GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        javax.swing.UIManager.LookAndFeelInfo[] looks = javax.swing.UIManager.getInstalledLookAndFeels();
        for (javax.swing.UIManager.LookAndFeelInfo look : looks) {
            System.out.println(look.getClassName());
        }

        try {
            /**
             * for (javax.swing.UIManager.LookAndFeelInfo info :
             * javax.swing.UIManager.getInstalledLookAndFeels()) { if
             * ("Nimbus".equals(info.getName())) {
             * javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } if
             * ("Metal".equals(info.getName())) {
             * javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } }
             **/
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(finalProjectUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(finalProjectUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(finalProjectUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(finalProjectUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        deviceNames.put(-1, "Beacon");
        deviceNames.put(-2, "Door");
        deviceNames.put(-3, "Motion");
        deviceNames.put(-4, "Outlet");
        deviceNames.put(-5, "SmartBulb");
        deviceNames.put(-6, "Temperature");
        deviceIds.put("Beacon", -1);
        deviceIds.put("Door", -2);
        deviceIds.put("Motion", -3);
        deviceIds.put("Outlet", -4);
        deviceIds.put("SmartBulb", -5);
        deviceIds.put("Temperature", -6);

        trueValues.put(-1, "Detected");
        falseValues.put(-1, "Not Detected");
        trueValues.put(-2, "Open");
        falseValues.put(-2, "Closed");
        trueValues.put(-3, "Detected");
        falseValues.put(-3, "Not Detected");
        trueValues.put(-4, "On");
        falseValues.put(-4, "Off");
        trueValues.put(-5, "On");
        falseValues.put(-5, "Off");

        sensorValues.put(-1, true);
        sensorValues.put(-2, true);
        sensorValues.put(-3, false);
        sensorValues.put(-4, false);
        sensorValues.put(-5, false);
        sensorValues.put(-6, true);
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        int id;
        int inputInt;
        String message;
        Boolean run = true;
        Boolean output = true;
        startConnection(GATEWAY_IP, PORT);
        // registering with the gateway server as user
        out.println("user");
        out.println("user");
        // reading and storing the id assigned by the gateway for future use and print
        // to Standard Out
        System.out.println("1");
        message = in.readLine();
        id = Integer.parseInt(message);
        finalProjectUI userGUI = new finalProjectUI();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    if (in.ready()) {
                        System.out.println("WE IN THIS");
                        alertBox.append(in.readLine());
                    }
                } catch (IOException ex) {
                    Logger.getLogger(finalProjectUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    // Calculates and sets appropriate size for the frame
                    userGUI.pack();
                    // userGUI.setDefaultLookAndFeelDecorated(false);
                    userGUI.setVisible(true);

                    jTabbedPane1.addChangeListener(new ChangeListener() {
                        public void stateChanged(ChangeEvent e) {
                            if (jTabbedPane1.getSelectedIndex() == 2) {
                                removeBox.removeAllItems();
                                for (int i = 1; i < dropdown.getItemCount(); i++) {
                                    removeBox.addItem(dropdown.getItemAt(i));
                                    System.out.println("HERE");
                                }
                            }
                        }
                    });
                    if (false) {
                        alertBox.append(in.readLine());
                    }
                } catch (IOException ex) {
                    Logger.getLogger(finalProjectUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        while (true) {
            if (!receivingInput) {
                if (in.ready()) {
                    System.out.println("2");
                    message = in.readLine();
                    System.out.println("HERE IT IS");
                    if (message.contains("Bulb")) {
                        message.replace("true", trueValues.get(-5));
                        message.replace("false", falseValues.get(-5));
                    } else if (message.contains("Outlet")) {
                        message.replace("true", trueValues.get(-4));
                        message.replace("false", falseValues.get(-4));
                    }
                    System.out.println("3");
                    alertBox.append(in.readLine() + "\n");
                }
            }
        }

    }

    public static void startConnection(String ip, int port) throws IOException {
        clientSocket = new Socket(ip, port);
        out = new PrintWriter(clientSocket.getOutputStream(), true);
        in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
    }

    /**
     * This method stops a connection with a server It also closes its input/output
     * streams with the server.
     * 
     * @throws IOException
     */
    public static void stopConnection() throws IOException {
        in.close();
        out.close();
        clientSocket.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel add;
    private javax.swing.JButton addObject;
    private static javax.swing.JTextArea alertBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel database;
    private javax.swing.JTextArea dbBox;
    private javax.swing.JRadioButton deviceButton;
    private static javax.swing.JComboBox<String> dropdown;
    private javax.swing.JLabel enterDate;
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private static javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel menu;
    private javax.swing.JLabel name;
    private javax.swing.JTextField newName;
    private javax.swing.JComboBox<String> option;
    private javax.swing.JPanel remove;
    private static javax.swing.JComboBox<String> removeBox;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextArea resultBox;
    private javax.swing.JButton run;
    private javax.swing.JRadioButton sensorButton;
    private javax.swing.JLabel title;
    private javax.swing.JLabel type;
    // End of variables declaration//GEN-END:variables
}